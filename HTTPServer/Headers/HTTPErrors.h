/*
* This file is part of Wakanda software, licensed by 4D under
*  (i) the GNU General Public License version 3 (GNU GPL v3), or
*  (ii) the Affero General Public License version 3 (AGPL v3) or
*  (iii) a commercial license.
* This file remains the exclusive property of 4D and/or its licensors
* and is protected by national and international legislations.
* In any event, Licensee's compliance with the terms and conditions
* of the applicable license constitutes a prerequisite to any use of this file.
* Except as otherwise expressly stated in the applicable license,
* such license does not include any other license or rights on this file,
* 4D's and/or its licensors' trademarks and/or other proprietary rights.
* Consequently, no title, copyright or other proprietary rights
* other than those specified in the applicable license is granted.
*/
#ifndef __HTTP_ERRORS_INCLUDED__
#define __HTTP_ERRORS_INCLUDED__



/**
 * Generic errors.
 */	
const XBOX::VError	VE_HTTP_GENERIC_UNIMPLEMENTED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1000);
const XBOX::VError	VE_HTTP_GENERIC_HTTP_ACCESS_DENIED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1001);
const XBOX::VError	VE_HTTP_INVALID_INTERNAL_STATE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1002);
const XBOX::VError	VE_HTTP_MEMORY_ERROR = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1003);
const XBOX::VError	VE_HTTP_INVALID_ARGUMENT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1004);
const XBOX::VError	VE_HTTP_REQUEST_HANDLER_ALREADY_EXISTS = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1005);
const XBOX::VError	VE_HTTP_BASE64_DECODING_FAILED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1006);
const XBOX::VError	VE_HTTP_BASE64_ENCODING_FAILED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1007);
const XBOX::VError	VE_HTTP_REQUEST_HANDLER_DOES_NOT_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1008);
const XBOX::VError	VE_HTTP_SERVER_IS_BEING_TURNED_OFF = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1009);
const XBOX::VError	VE_HTTP_SERVER_PROJECT_DOES_NOT_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1010);
const XBOX::VError	VE_HTTP_SERVER_VIRTUAL_HOST_ALREADY_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1011);
const XBOX::VError	VE_STRING_NOT_FOUND = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1012);
const XBOX::VError	VE_AUTHENTICATION_REFEREE_ALREADY_EXISTS = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1013);
const XBOX::VError	VE_CACHE_RULE_ALREADY_EXISTS = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1014);
const XBOX::VError	VE_CACHE_RULE_ALREADY_EXPIRES = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1015);
const XBOX::VError	VE_INVALID_LOG_BUFFER = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1016);
const XBOX::VError	VE_CANNOT_CREATE_LOG_FILE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1017);
const XBOX::VError	VE_CANNOT_OPEN_LOG_FILE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1018);
const XBOX::VError	VE_CACHE_RULE_DOES_NOT_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1019);
const XBOX::VError	VE_PROCESSING_HANDLER_ALREADY_EXISTS = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1020);
const XBOX::VError	VE_PROCESSING_HANDLER_DOES_NOT_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1021);
const XBOX::VError	VE_CAN_NOT_START_HTTP_SERVER = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1022);
const XBOX::VError	VE_HTTP_SERVER_PROJECT_ALREADY_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1023);
const XBOX::VError	VE_VIRTUAL_FOLDER_ALREADY_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1024);
const XBOX::VError	VE_CAN_NOT_START_HTTP_SERVER_PROJECT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1025);
const XBOX::VError	VE_VIRTUAL_FOLDER_DOES_NOT_EXIST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 1026);
const XBOX::VError	VE_WEB_SOCKET_HANDLER_ALREADY_EXIST = MAKE_VERROR(HTTP_SERVER_COMPONENT_SIGNATURE, 1027);
const XBOX::VError	VE_WEB_SOCKET_HANDLER_DOES_NOT_EXIST = MAKE_VERROR(HTTP_SERVER_COMPONENT_SIGNATURE, 1028);


/**
 * Protocol Status Codes (which are not necessary errors).
 */	
const XBOX::VError	VE_HTTP_PROTOCOL_CONTINUE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 100);
const XBOX::VError	VE_HTTP_PROTOCOL_SWITCHING_PROTOCOLS = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 101);
const XBOX::VError	VE_HTTP_PROTOCOL_OK = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 200);
const XBOX::VError	VE_HTTP_PROTOCOL_CREATED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 201);
const XBOX::VError	VE_HTTP_PROTOCOL_ACCEPTED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 202);
const XBOX::VError	VE_HTTP_PROTOCOL_NON_AUTHORITATIVE_INFORMATION = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 203);
const XBOX::VError	VE_HTTP_PROTOCOL_NO_CONTENT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 204);
const XBOX::VError	VE_HTTP_PROTOCOL_RESET_CONTENT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 205);
const XBOX::VError	VE_HTTP_PROTOCOL_PARTIAL_CONTENT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 206);
const XBOX::VError	VE_HTTP_PROTOCOL_MULTIPLE_CHOICE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 300);
const XBOX::VError	VE_HTTP_PROTOCOL_MOVED_PERMANENTLY = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 301);
const XBOX::VError	VE_HTTP_PROTOCOL_FOUND = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 302);
const XBOX::VError	VE_HTTP_PROTOCOL_SEE_OTHER = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 303);
const XBOX::VError	VE_HTTP_PROTOCOL_NOT_MODIFIED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 304);
const XBOX::VError	VE_HTTP_PROTOCOL_USE_PROXY = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 305);
const XBOX::VError	VE_HTTP_PROTOCOL_TEMPORARY_REDIRECT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 307);


/**
 * Protocol errors.
 */	

// Client Error 4xx
const XBOX::VError	VE_HTTP_PROTOCOL_BAD_REQUEST = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 400);
const XBOX::VError	VE_HTTP_PROTOCOL_UNAUTHORIZED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 401);
const XBOX::VError	VE_HTTP_PROTOCOL_PAYMENT_REQUIRED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 402);
const XBOX::VError	VE_HTTP_PROTOCOL_FORBIDDEN = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 403);
const XBOX::VError	VE_HTTP_PROTOCOL_NOT_FOUND = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 404);
const XBOX::VError	VE_HTTP_PROTOCOL_METHOD_NOT_ALLOWED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 405);
const XBOX::VError	VE_HTTP_PROTOCOL_NOT_ACCEPTABLE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 406);
const XBOX::VError	VE_HTTP_PROTOCOL_PROXY_AUTHENTICATION_REQUIRED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 407);
const XBOX::VError	VE_HTTP_PROTOCOL_REQUEST_TIMEOUT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 408);
const XBOX::VError	VE_HTTP_PROTOCOL_CONFLICT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 409);
const XBOX::VError	VE_HTTP_PROTOCOL_GONE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 410);
const XBOX::VError	VE_HTTP_PROTOCOL_LENGTH_REQUIRED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 411);
const XBOX::VError	VE_HTTP_PROTOCOL_PRECONDITION_FAILED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 412);
const XBOX::VError	VE_HTTP_PROTOCOL_REQUEST_ENTITY_TOO_LARGE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 413);
const XBOX::VError	VE_HTTP_PROTOCOL_REQUEST_URI_TOO_LONG = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 414);
const XBOX::VError	VE_HTTP_PROTOCOL_UNSUPPORTED_MEDIA_TYPE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 415);
const XBOX::VError	VE_HTTP_PROTOCOL_REQUESTED_RANGE_NOT_SATISFIABLE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 416);
const XBOX::VError	VE_HTTP_PROTOCOL_EXPECTATION_FAILED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 417);

// Server Error 5xx
const XBOX::VError	VE_HTTP_PROTOCOL_INTERNAL_SERVER_ERROR = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 500);
const XBOX::VError	VE_HTTP_PROTOCOL_NOT_IMPLEMENTED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 501);
const XBOX::VError	VE_HTTP_PROTOCOL_BAD_GATEWAY = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 502);
const XBOX::VError	VE_HTTP_PROTOCOL_SERVICE_UNAVAILABLE = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 503);
const XBOX::VError	VE_HTTP_PROTOCOL_GATEWAY_TIMEOUT = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 504);
const XBOX::VError	VE_HTTP_PROTOCOL_HTTP_VERSION_NOT_SUPPORTED = MAKE_VERROR (HTTP_SERVER_COMPONENT_SIGNATURE, 505);


#endif	// __HTTP_ERRORS_INCLUDED__
